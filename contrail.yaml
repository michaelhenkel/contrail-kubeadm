---
# Source: Contrail/templates/contrail-namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: contrail
spec:
  finalizers:
  - kubernetes
---
# Source: Contrail/templates/contrail-config-map.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: contrail-config-map
  namespace: contrail
data:
  RABBITMQ_NODE_PORT: "5673"
  CONFIGDB_PORT: "9160"
  CONFIGDB_CQL_PORT: "9042"
  CASSANDRA_CQL_PORT: "9042"
  CASSANDRA_JMX_LOCAL_PORT: "7199"
  CONFIG_NODEMGR__DEFAULTS__minimum_diskGB: "2"
  ANALYTICSDB_PORT: "9160"
  ANALYTICSDB_CQL_PORT: "9042"
  ZOOKEEPER_ANALYTICS_PORT: "2181"
  CLOUD_ORCHESTRATOR: "kubernetes"
  CONTRAIL_CONTAINER_REGISTRY: docker.io/michaelhenkel
  CONTRAIL_CONTAINER_TAG: 5.1.1-dev1
  KUBERNETES_IP_FABRIC_FORWARDING: "true"
  KUBERNETES_IP_FABRIC_SNAT: "true"
  CONTAINER_SCHEDULER: k8s
---
# Source: Contrail/templates/contrail-rbac.yaml
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  namespace: contrail
  name: contrail-cluster-role
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: contrail
  name: contrail-service-account
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: contrail-cluster-role-binding
  namespace: contrail
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: contrail-cluster-role
subjects:
- kind: ServiceAccount
  name: contrail-service-account
  namespace: contrail
---
# Source: Contrail/charts/cassandra/templates/cassandra.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cassandra-config
  namespace: contrail
data:
  CASSANDRA_CLUSTER_NAME: ContrailConfigDB
  CASSANDRA_START_RPC: "true"
  CASSANDRA_LISTEN_ADDRESS: auto
  CASSANDRA_PORT: "9160"
  CASSANDRA_CQL_PORT: "9042"
  CASSANDRA_SSL_STORAGE_PORT: "7001"
  CASSANDRA_STORAGE_PORT: "7000"
  CASSANDRA_JMX_LOCAL_PORT: "7199"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contrail-cassandra
  namespace: contrail
  labels:
    app: contrail-cassandra
spec:
  replicas: 3
  selector:
    matchLabels:
      app: contrail-cassandra
  template:
    metadata:
      labels:
        app: contrail-cassandra
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ''
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
      hostNetwork: true
      serviceAccountName: contrail-service-account
      initContainers:
      - name: contrail-k8s-init
        image: docker.io/michaelhenkel/contrail-k8s-init-container:5.1.1-dev1
        command: ["/contrail-k8s-init2","contrail-cassandra"]
        imagePullPolicy: "IfNotPresent"
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
      - name: wait-for-vhost0
        image: busybox
        command: ["sh","-c","until ifconfig vhost0 > /dev/null 2>&1; do sleep 1;echo waiting for vhost0 ;done;echo vhost0 is alive"]
      containers:
#      - name: nodemgr
#        image: "docker.io/michaelhenkel/contrail-nodemgr:5.1.1-dev1"
#        imagePullPolicy: "IfNotPresent"
#        envFrom:
#        - configMapRef:
#            name: contrail-config-map
#        env:
#        - name: NODE_TYPE
#          value: database
#        - name: DATABASE_NODEMGR__DEFAULTS__minimum_diskGB
#          value: "2"
#        - name: DOCKER_HOST
#          value: "unix://mnt/docker.sock"
#        - name: CONTROLLER_NODES
#          valueFrom:
#            configMapKeyRef:
#              name: contrailcontrollernodesv1
#              key: CONTROLLER_NODES
#        volumeMounts:
#        - mountPath: /var/log/contrail
#          name: configdb-logs
#        - mountPath: /mnt
#          name: docker-unix-socket
      - name: cassandra
        image: "docker.io/michaelhenkel/contrail-external-cassandra:5.1.1-dev1"
        imagePullPolicy: ""
        env:
        - name: NODE_TYPE
          value: config-database
        - name: CASSANDRA_SEEDS
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        envFrom:
        - configMapRef:
            name: cassandra-config
        volumeMounts:
        - mountPath: /var/lib/cassandra
          name: configdb-data
        - mountPath: /var/log/cassandra
          name: configdb-logs
      volumes:
      - name: configdb-data
        hostPath:
          path: /var/lib/contrail/configdb
      - name: configdb-logs
        hostPath:
          path: /var/log/contrail/configdb
      - name: docker-unix-socket
        hostPath:
          path: /var/run
      - name: host-usr-bin
        hostPath:
          path: /usr/bin
---
# Source: Contrail/charts/rabbitmq/templates/rabbitmq.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-config
  namespace: contrail
data:
  RABBITMQ_ERLANG_COOKIE: "47EFF3BB-4786-46E0-A5BB-58455B3C2CB4"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contrail-rabbitmq
  namespace: contrail
  labels:
    app: contrail-rabbitmq
spec:
  replicas: 3
  selector:
    matchLabels:
      app: contrail-rabbitmq
  template:
    metadata:
      labels:
        app: contrail-rabbitmq
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ''
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
      hostNetwork: true
      serviceAccountName: contrail-service-account
      initContainers:
      - name: contrail-k8s-init
        image: docker.io/michaelhenkel/contrail-k8s-init-container:5.1.1-dev1
        command: ["/contrail-k8s-init2","contrail-rabbitmq"]
        imagePullPolicy: "IfNotPresent"
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
      - name: wait-for-vhost0
        image: busybox
        command: ["sh","-c","until ifconfig vhost0 > /dev/null 2>&1; do sleep 1;echo waiting for vhost0 ;done;echo vhost0 is alive"]
      containers:
      - name: rabbitmq
        image: "docker.io/michaelhenkel/contrail-external-rabbitmq:5.1.1-dev1"
        imagePullPolicy: ""
        env:
        - name: NODE_TYPE
          value: config-database
        - name: RABBITMQ_NODE_PORT
          value: "5673"
        - name: RABBITMQ_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        envFrom:
        - configMapRef:
            name: rabbitmq-config
        volumeMounts:
        - mountPath: /var/lib/rabbitmq
          name: rabbitmq-data
        - mountPath: /var/log/rabbitmq
          name: rabbitmq-logs
      volumes:
      - name: rabbitmq-data
        hostPath:
          path: /var/lib/contrail/rabbitmq
      - name: rabbitmq-logs
        hostPath:
          path: /var/log/contrail/rabbitmq
---
# Source: Contrail/charts/zookeeper/templates/zookeeper.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contrail-zookeeper
  namespace: contrail
  labels:
    app: contrail-zookeeper
spec:
  replicas: 3
  selector:
    matchLabels:
      app: contrail-zookeeper
  template:
    metadata:
      labels:
        app: contrail-zookeeper
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ''
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
      hostNetwork: true
      serviceAccountName: contrail-service-account
      initContainers:
      - name: contrail-k8s-init
        image: docker.io/michaelhenkel/contrail-k8s-init-container:5.1.1-dev1
        command: ["/contrail-k8s-init2","contrail-zookeeper"]
        imagePullPolicy: "IfNotPresent"
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
      - name: wait-for-vhost0
        image: busybox
        command: ["sh","-c","until ifconfig vhost0 > /dev/null 2>&1; do sleep 1;echo waiting for vhost0 ;done;echo vhost0 is alive"]
      containers:
      - name: zookeeper
        image: "docker.io/michaelhenkel/contrail-external-zookeeper:5.1.1-dev1"
        imagePullPolicy: ""
        env:
        - name: ZOOKEEPER_PORT
          value: "2181"
        - name: ZOOKEEPER_PORTS
          value: "2888:3888"
        - name: NODE_TYPE
          value: config-database
        - name: ZOOKEEPER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        volumeMounts:
        - mountPath: /var/lib/zookeeper
          name: zookeeper-data
        - mountPath: /var/log/zookeeper
          name: zookeeper-logs
      volumes:
      - name: zookeeper-data
        hostPath:
          path: /var/lib/contrail/zookeeper
      - name: zookeeper-logs
        hostPath:
          path: /var/log/contrail/zookeeper
---
# Source: Contrail/charts/redis/templates/redis.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contrail-redis
  namespace: contrail
  labels:
    app: contrail-redis
spec:
  replicas: 3
  selector:
    matchLabels:
      app: contrail-redis
  template:
    metadata:
      labels:
        app: contrail-redis
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ''
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
      hostNetwork: true
      serviceAccountName: contrail-service-account
      initContainers:
      - name: contrail-k8s-init
        image: docker.io/michaelhenkel/contrail-k8s-init-container:5.1.1-dev1
        command: ["/contrail-k8s-init2","contrail-redis"]
        imagePullPolicy: "IfNotPresent"
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
      - name: wait-for-vhost0
        image: busybox
        command: ["sh","-c","until ifconfig vhost0 > /dev/null 2>&1; do sleep 1;echo waiting for vhost0 ;done;echo vhost0 is alive"]
      containers:
      - name: redis
        image: "docker.io/michaelhenkel/contrail-external-redis:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        volumeMounts:
        - mountPath: /var/lib/redis
          name: redis-data
        - mountPath: /var/log/redis
          name: redis-logs
      volumes:
      - name: redis-data
        hostPath:
          path: /var/lib/contrail/redis
      - name: redis-logs
        hostPath:
          path: /var/log/contrail/redis
---
# Source: Contrail/charts/kafka/templates/kafka.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contrail-kafka
  namespace: contrail
  labels:
    app: contrail-kafka
spec:
  replicas: 3
  selector:
    matchLabels:
      app: contrail-kafka
  template:
    metadata:
      labels:
        app: contrail-kafka
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ''
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
      hostNetwork: true
      serviceAccountName: contrail-service-account
      initContainers:
      - name: contrail-k8s-init
        image: docker.io/michaelhenkel/contrail-k8s-init-container:5.1.1-dev1
        command: ["/contrail-k8s-init2","contrail-kafka"]
        imagePullPolicy: "IfNotPresent"
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
      - name: wait-for-vhost0
        image: busybox
        command: ["sh","-c","until ifconfig vhost0 > /dev/null 2>&1; do sleep 1;echo waiting for vhost0 ;done;echo vhost0 is alive"]
      containers:
      - name: kafka
        image: "docker.io/michaelhenkel/contrail-external-kafka:5.1.1-dev1"
        imagePullPolicy: ""
        env:
        - name: NODE_TYPE
          value: database
        - name: ZOOKEEPER_ANALYTICS_PORT
          value: "2181"
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
---
# Source: Contrail/charts/config/templates/config.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contrail-controller-config
  namespace: contrail
  labels:
    app: contrail-controller-config
spec:
  replicas: 3
  selector:
    matchLabels:
      app: contrail-controller-config
  template:
    metadata:
      labels:
        app: contrail-controller-config
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ''
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
      hostNetwork: true
      serviceAccountName: contrail-service-account
      initContainers:
      - name: contrail-k8s-init
        image: docker.io/michaelhenkel/contrail-k8s-init-container:5.1.1-dev1
        command: ["/contrail-k8s-init2","contrail-controller-config"]
        imagePullPolicy: "IfNotPresent"
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
      - name: wait-for-vhost0
        image: busybox
        command: ["sh","-c","until ifconfig vhost0 > /dev/null 2>&1; do sleep 1;echo waiting for vhost0 ;done;echo vhost0 is alive"]
      - name: contrail-node-init
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        - name: CONTRAIL_STATUS_IMAGE
          value: "docker.io/michaelhenkel/contrail-status:5.1.1-dev1"
        image: "docker.io/michaelhenkel/contrail-node-init:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /host/usr/bin
          name: host-usr-bin
      containers:
      - name: api
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        image: "docker.io/michaelhenkel/contrail-controller-config-api:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        volumeMounts:
        - mountPath: /var/log/contrail
          name: config-logs
      - name: devicemgr
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        image: "docker.io/michaelhenkel/contrail-controller-config-devicemgr:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        volumeMounts:
        - mountPath: /var/log/contrail
          name: config-logs
      - name: schema
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        image: "docker.io/michaelhenkel/contrail-controller-config-schema:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        volumeMounts:
        - mountPath: /var/log/contrail
          name: config-logs
      - name: svcmonitor
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        image: "docker.io/michaelhenkel/contrail-controller-config-svcmonitor:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        volumeMounts:
        - mountPath: /var/log/contrail
          name: config-logs
      - name: nodemgr
        image: "docker.io/michaelhenkel/contrail-nodemgr:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NODE_TYPE
          value: config
        - name: DOCKER_HOST
          value: "unix://mnt/docker.sock"
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        volumeMounts:
        - mountPath: /var/log/contrail
          name: config-logs
        - mountPath: /mnt
          name: docker-unix-socket
      volumes:
      - name: config-logs
        hostPath:
          path: /var/log/contrail/config
      - name: docker-unix-socket
        hostPath:
          path: /var/run
      - name: host-usr-bin
        hostPath:
          path: /usr/bin
---
# Source: Contrail/charts/analytics/templates/analytics.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contrail-analytics
  namespace: contrail
  labels:
    app: contrail-analytics
spec:
  replicas: 3
  selector:
    matchLabels:
      app: contrail-analytics
  template:
    metadata:
      labels:
        app: contrail-analytics
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ''
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
      hostNetwork: true
      serviceAccountName: contrail-service-account
      initContainers:
      - name: contrail-k8s-init
        image: docker.io/michaelhenkel/contrail-k8s-init-container:5.1.1-dev1
        command: ["/contrail-k8s-init2","contrail-analytics"]
        imagePullPolicy: "IfNotPresent"
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
      - name: wait-for-api
        image: busybox
        command: ["sh","-c","for cn in `echo $CONTROLLER_NODES | tr ',' '\n'`; do until nc $cn 8082 -w 1 > /dev/null 2>&1; do sleep 1;echo waiting for $cn ;done;echo $cn is alive; done"]
        env:
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
      - name: contrail-node-init
        image: "docker.io/michaelhenkel/contrail-node-init:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        securityContext:
          privileged: true
        env:
        - name: CONTRAIL_STATUS_IMAGE
          value: "docker.io/michaelhenkel/contrail-status:5.1.1-dev1"
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        envFrom:
        - configMapRef:
            name: contrail-config-map
        volumeMounts:
        - mountPath: /host/usr/bin
          name: host-usr-bin
      containers:
      - name: api
        image: "docker.io/michaelhenkel/contrail-analytics-api:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        volumeMounts:
        - mountPath: /var/log/contrail
          name: analytics-logs
      - name: collector
        image: "docker.io/michaelhenkel/contrail-analytics-collector:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        volumeMounts:
        - mountPath: /var/log/contrail
          name: analytics-logs
      - name: alarm-gen
        image: "docker.io/michaelhenkel/contrail-analytics-alarm-gen:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        volumeMounts:
        - mountPath: /var/log/contrail
          name: analytics-logs
      - name: query-engine
        image: "docker.io/michaelhenkel/contrail-analytics-query-engine:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        volumeMounts:
        - mountPath: /var/log/contrail
          name: analytics-logs
      - name: snmp-collector
        image: "docker.io/michaelhenkel/contrail-analytics-snmp-collector:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        volumeMounts:
        - mountPath: /var/log/contrail
          name: analytics-logs
      - name: topology
        image: "docker.io/michaelhenkel/contrail-analytics-snmp-topology:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        volumeMounts:
        - mountPath: /var/log/contrail
          name: analytics-logs
      - name: nodemgr
        image: "docker.io/michaelhenkel/contrail-nodemgr:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        - name: NODE_TYPE
          value: analytics
        - name: DOCKER_HOST
          value: "unix://mnt/docker.sock"
        volumeMounts:
        - mountPath: /var/log/contrail
          name: analytics-logs
        - mountPath: /mnt
          name: docker-unix-socket
      volumes:
      - name: analytics-logs
        hostPath:
          path: /var/log/contrail/analytics
      - name: docker-unix-socket
        hostPath:
          path: /var/run
      - name: host-usr-bin
        hostPath:
          path: /usr/bin
---
# Source: Contrail/charts/control/templates/control.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contrail-controller-control
  namespace: contrail
  labels:
    app: contrail-controller-control
spec:
  replicas: 3
  selector:
    matchLabels:
      app: contrail-controller-control
  template:
    metadata:
      labels:
        app: contrail-controller-control
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ''
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
      hostNetwork: true
      serviceAccountName: contrail-service-account
      initContainers:
      - name: contrail-k8s-init
        image: docker.io/michaelhenkel/contrail-k8s-init-container:5.1.1-dev1
        command: ["/contrail-k8s-init2","contrail-controller-control"]
        imagePullPolicy: "IfNotPresent"
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
      - name: wait-for-api
        image: busybox
        command: ["sh","-c","for cn in `echo $CONTROLLER_NODES | tr ',' '\n'`; do until nc $cn 8082 -w 1 > /dev/null 2>&1; do sleep 1;echo waiting for $cn ;done;echo $cn is alive; done"]
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
      - name: contrail-node-init
        image: "docker.io/michaelhenkel/contrail-node-init:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        securityContext:
          privileged: true
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTRAIL_STATUS_IMAGE
          value: "docker.io/michaelhenkel/contrail-status:5.1.1-dev1"
        envFrom:
        - configMapRef:
            name: contrail-config-map
        volumeMounts:
        - mountPath: /host/usr/bin
          name: host-usr-bin
      containers:
      - name: control
        image: "docker.io/michaelhenkel/contrail-controller-control-control:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        volumeMounts:
        - mountPath: /var/log/contrail
          name: control-logs
      - name: dns
        image: "docker.io/michaelhenkel/contrail-controller-control-dns:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        volumeMounts:
        - mountPath: /etc/contrail
          name: dns-config
        - mountPath: /var/log/contrail
          name: control-logs
      - name: named
        image: "docker.io/michaelhenkel/contrail-controller-control-named:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/contrail
          name: dns-config
        - mountPath: /var/log/contrail
          name: control-logs
      - name: nodemgr
        image: "docker.io/michaelhenkel/contrail-nodemgr:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        - name: NODE_TYPE
          value: control
        - name: DOCKER_HOST
          value: "unix://mnt/docker.sock"
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - mountPath: /var/log/contrail
          name: control-logs
        - mountPath: /mnt
          name: docker-unix-socket
      volumes:
      - name: control-logs
        hostPath:
          path: /var/log/contrail/control
      - name: docker-unix-socket
        hostPath:
          path: /var/run
      - name: dns-config
        emptyDir: {}
      - name: host-usr-bin
        hostPath:
          path: /usr/bin
---
# Source: Contrail/charts/webui/templates/webui.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contrail-controller-webui
  namespace: contrail
  labels:
    app: contrail-controller-webui
spec:
  replicas: 3
  selector:
    matchLabels:
      app: contrail-controller-webui
  template:
    metadata:
      labels:
        app: contrail-controller-webui
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ''
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
      hostNetwork: true
      serviceAccountName: contrail-service-account
      initContainers:
      - name: contrail-k8s-init
        image: docker.io/michaelhenkel/contrail-k8s-init-container:5.1.1-dev1
        command: ["/contrail-k8s-init2","contrail-controller-webui"]
        imagePullPolicy: "IfNotPresent"
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
      - name: contrail-node-init
        image: "docker.io/michaelhenkel/contrail-node-init:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        securityContext:
          privileged: true
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTRAIL_STATUS_IMAGE
          value: "docker.io/michaelhenkel/contrail-status:5.1.1-dev1"
        volumeMounts:
        - mountPath: /host/usr/bin
          name: host-usr-bin
      containers:
      - name: job
        image: "docker.io/michaelhenkel/contrail-controller-webui-job:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        volumeMounts:
        - mountPath: /var/log/contrail
          name: webui-logs
      - name: web
        image: "docker.io/michaelhenkel/contrail-controller-webui-web:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        volumeMounts:
        - mountPath: /var/log/contrail
          name: webui-logs
      volumes:
      - name: webui-logs
        hostPath:
          path: /var/log/contrail/webui
      - name: host-usr-bin
        hostPath:
          path: /usr/bin
---
# Source: Contrail/charts/kubemanager/templates/kubemanager.yaml
---
apiVersion: v1
kind: Secret
metadata:
  name: contrail-kube-manager-token
  namespace: contrail
  annotations:
    kubernetes.io/service-account.name: contrail-service-account
type: kubernetes.io/service-account-token
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-manager-config
  namespace: contrail
data:
  K8S_TOKEN_FILE: "/tmp/serviceaccount/token"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contrail-kube-manager
  namespace: contrail
  labels:
    app: contrail-kube-manager
spec:
  replicas: 3
  selector:
    matchLabels:
      app: contrail-kube-manager
  template:
    metadata:
      labels:
        app: contrail-kube-manager
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ''
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
      hostNetwork: true
      serviceAccountName: contrail-service-account
      initContainers:
      - name: contrail-k8s-init
        image: docker.io/michaelhenkel/contrail-k8s-init-container:5.1.1-dev1
        command: ["/contrail-k8s-init2","contrail-kube-manager"]
        imagePullPolicy: "IfNotPresent"
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
      - name: wait-for-api
        image: busybox
        command: ["sh","-c","for cn in `echo $CONTROLLER_NODES | tr ',' '\n'`; do until nc $cn 8082 -w 1 > /dev/null 2>&1; do sleep 1;echo waiting for $cn ;done;echo $cn is alive; done"]
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
      - name: contrail-node-init
        image: "docker.io/michaelhenkel/contrail-node-init:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        securityContext:
          privileged: true
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTRAIL_STATUS_IMAGE
          value: "docker.io/michaelhenkel/contrail-status:5.1.1-dev1"
        envFrom:
        - configMapRef:
            name: contrail-config-map
        volumeMounts:
        - mountPath: /host/usr/bin
          name: host-usr-bin
      containers:
      - name: kube-manager
        image: "docker.io/michaelhenkel/contrail-kubernetes-kube-manager:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        envFrom:
        - configMapRef:
            name: contrail-config-map
        - configMapRef:
            name: kube-manager-config
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: LOG_LEVEL
          value: "SYS_DEBUG"
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        - name: KUBERNETES_API_SERVER
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: KUBERNETES_API_SERVER
        - name: KUBERNETES_API_SECURE_PORT
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: KUBERNETES_API_SECURE_PORT
        volumeMounts:
        - mountPath: /var/log/contrail
          name: kube-manager-logs
        - mountPath: /tmp/serviceaccount
          name: pod-secret
      volumes:
      - name: pod-secret
        secret:
          secretName: contrail-kube-manager-token
      - name: kube-manager-logs
        hostPath:
          path: /var/log/contrail/kube-manager
      - name: host-usr-bin
        hostPath:
          path: /usr/bin
---
# Source: Contrail/charts/vrouter/templates/vrouter.yaml
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  namespace: contrail
  name: contrailvrouter
spec:
  template:
    metadata:
      labels:
        app: contrailvrouter
    spec:
#      affinity:
#        nodeAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#            nodeSelectorTerms:
#            - matchExpressions:
#              - key: "node-role.kubernetes.io/master"
#                operator: NotIn
#                values:
#                - ""
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
      hostNetwork: true
      serviceAccountName: contrail-service-account
      initContainers:
      - name: contrail-k8s-init
        image: docker.io/michaelhenkel/contrail-k8s-init-container:5.1.1-dev1
        command: ["/contrail-k8s-init2","contrail-controller-control"]
        imagePullPolicy: "IfNotPresent"
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
      - name: contrail-node-init
        image: "docker.io/michaelhenkel/contrail-node-init:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        securityContext:
          privileged: true
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTRAIL_STATUS_IMAGE
          value: "docker.io/michaelhenkel/contrail-status:5.1.1-dev1"
        envFrom:
        - configMapRef:
            name: contrail-config-map
        volumeMounts:
        - mountPath: /host/usr/bin
          name: host-usr-bin
      - name: contrail-vrouter-kernel-init
        image: "docker.io/michaelhenkel/contrail-vrouter-kernel-init:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        - name: CONTROL_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        volumeMounts:
        - mountPath: /usr/src
          name: usr-src
        - mountPath: /lib/modules
          name: lib-modules
        - mountPath: /etc/sysconfig/network-scripts
          name: network-scripts
        - mountPath: /host/bin
          name: host-bin
      - name: contrail-vrouter-nic-init
        image: "docker.io/michaelhenkel/contrail-vrouter-nic-init:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        - name: CONTROL_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        volumeMounts:
        - mountPath: /usr/src
          name: usr-src
        - mountPath: /lib/modules
          name: lib-modules
        - mountPath: /etc/sysconfig/network-scripts
          name: network-scripts
        - mountPath: /host/bin
          name: host-bin
      - name: wait-for-api
        image: busybox
        command: ["sh","-c","for cn in `echo $CONTROLLER_NODES | tr ',' '\n'`; do until nc $cn 8082 -w 1 > /dev/null 2>&1; do sleep 1;echo waiting for $cn ;done;echo $cn is alive; done"]
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
      - name: contrail-kubernetes-cni-init
        image: "docker.io/michaelhenkel/contrail-kubernetes-cni-init:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        volumeMounts:
        - mountPath: /var/lib/contrail
          name: var-lib-contrail
        - mountPath: /host/etc_cni
          name: etc-cni
        - mountPath: /host/opt_cni_bin
          name: opt-cni-bin
        - mountPath: /host/log_cni
          name: var-log-contrail-cni
        - mountPath: /var/log/contrail
          name: agent-logs
      containers:
      - name: contrail-vrouter-agent
        image: "docker.io/michaelhenkel/contrail-vrouter-agent:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        lifecycle:
          preStop:
            exec:
              command: ["/clean-up.sh"]
        volumeMounts:
        - mountPath: /dev
          name: dev
        - mountPath: /etc/sysconfig/network-scripts
          name: network-scripts
        - mountPath: /host/bin
          name: host-bin
        - mountPath: /var/log/contrail
          name: agent-logs
        - mountPath: /usr/src
          name: usr-src
        - mountPath: /lib/modules
          name: lib-modules
        - mountPath: /var/lib/contrail
          name: var-lib-contrail
        - mountPath: /var/crashes
          name: var-crashes
        - mountPath: /tmp/serviceaccount
          name: pod-secret
      - name: nodemgr
        image: "docker.io/michaelhenkel/contrail-nodemgr:5.1.1-dev1"
        imagePullPolicy: "IfNotPresent"
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DOCKER_HOST
          value: "unix://mnt/docker.sock"
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
        - name: NODE_TYPE
          value: vrouter
        volumeMounts:
        - mountPath: /var/log/contrail
          name: agent-logs
        - mountPath: /mnt
          name: docker-unix-socket
      volumes:
      - name: dev
        hostPath:
          path: /dev
      - name: network-scripts
        hostPath:
          path: /etc/sysconfig/network-scripts
      - name: host-bin
        hostPath:
          path: /bin
      - name: docker-unix-socket
        hostPath:
          path: /var/run
      - name: pod-secret
        secret:
          secretName: contrail-kube-manager-token
      - name: usr-src
        hostPath:
          path: /usr/src
      - name: lib-modules
        hostPath:
          path: /lib/modules
      - name: var-lib-contrail
        hostPath:
          path: /var/lib/contrail
      - name: var-crashes
        hostPath:
          path: /var/contrail/crashes
      - name: etc-cni
        hostPath:
          path: /etc/cni
      - name: opt-cni-bin
        hostPath:
          path: /opt/cni/bin
      - name: var-log-contrail-cni
        hostPath:
          path: /var/log/contrail/cni
      - name: agent-logs
        hostPath:
          path: /var/log/contrail/agent
      - name: host-usr-bin
        hostPath:
          path: /usr/bin
