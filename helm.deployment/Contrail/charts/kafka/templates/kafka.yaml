---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contrail-kafka
  namespace: {{ .Values.global.namespace }}
  labels:
    app: contrail-kafka
spec:
  replicas: {{ .Values.global.replicas }}
  selector:
    matchLabels:
      app: contrail-kafka
  template:
    metadata:
      labels:
        app: contrail-kafka
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ''
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
      hostNetwork: true
      serviceAccountName: contrail-service-account
      initContainers:
      - name: contrail-k8s-init
        image: {{ .Values.global.containerRegistry }}/contrail-k8s-init-container:{{ .Values.global.containerTag }}
        command: ["/contrail-k8s-init2","contrail-kafka"]
        imagePullPolicy: "IfNotPresent"
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
      - name: wait-for-vhost0
        image: busybox
        command: ["sh","-c","until ifconfig vhost0 > /dev/null 2>&1; do sleep 1;echo waiting for vhost0 ;done;echo vhost0 is alive"]
      containers:
      - name: kafka
        image: "{{ .Values.global.containerRegistry }}/contrail-external-kafka:{{ .Values.global.containerTag }}"
        imagePullPolicy: ""
        env:
        - name: NODE_TYPE
          value: database
        - name: ZOOKEEPER_ANALYTICS_PORT
          value: "2181"
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodesv1
              key: CONTROLLER_NODES
