---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  namespace: {{ .Values.global.namespace }}
  name: contrailvrouter
spec:
  template:
    metadata:
      labels:
        app: contrailvrouter
    spec:
#      affinity:
#        nodeAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#            nodeSelectorTerms:
#            - matchExpressions:
#              - key: "node-role.kubernetes.io/master"
#                operator: NotIn
#                values:
#                - ""
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
      hostNetwork: true
      serviceAccountName: contrail-service-account
      initContainers:
      - name: contrail-k8s-init
        image: {{ .Values.global.containerRegistry }}/contrail-k8s-init-container:{{ .Values.global.containerTag }}
        command: ["/contrail-k8s-init"]
        imagePullPolicy: "Always"
      - name: contrail-node-init
        image: "{{ .Values.global.containerRegistry}}/contrail-node-init:{{ .Values.global.containerTag }}"
        imagePullPolicy: "Always"
        securityContext:
          privileged: true
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTRAIL_STATUS_IMAGE
          value: "{{.Values.global.containerRegistry}}/contrail-status:{{.Values.global.containerTag}}"
        envFrom:
        - configMapRef:
            name: contrail-config-map
        volumeMounts:
        - mountPath: /host/usr/bin
          name: host-usr-bin
      - name: contrail-vrouter-kernel-init
        image: "{{.Values.global.containerRegistry}}/contrail-vrouter-kernel-init:{{.Values.global.containerTag}}"
        imagePullPolicy: "Always"
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodes
              key: CONTROLLER_NODES
        - name: CONTROL_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodes
              key: CONTROLLER_NODES
        volumeMounts:
        - mountPath: /usr/src
          name: usr-src
        - mountPath: /lib/modules
          name: lib-modules
        - mountPath: /etc/sysconfig/network-scripts
          name: network-scripts
        - mountPath: /host/bin
          name: host-bin
      - name: contrail-vrouter-nic-init
        image: "{{.Values.global.containerRegistry}}/contrail-vrouter-nic-init:{{.Values.global.containerTag}}"
        imagePullPolicy: "Always"
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodes
              key: CONTROLLER_NODES
        - name: CONTROL_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodes
              key: CONTROLLER_NODES
        volumeMounts:
        - mountPath: /usr/src
          name: usr-src
        - mountPath: /lib/modules
          name: lib-modules
        - mountPath: /etc/sysconfig/network-scripts
          name: network-scripts
        - mountPath: /host/bin
          name: host-bin
      - name: wait-for-api
        image: busybox
        command: ["sh","-c","for cn in `echo $CONTROLLER_NODES | tr ',' '\n'`; do until nc $cn 8082 -w 1 > /dev/null 2>&1; do sleep 1;echo waiting for $cn ;done;echo $cn is alive; done"]
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodes
              key: CONTROLLER_NODES
      - name: contrail-kubernetes-cni-init
        image: "{{.Values.global.containerRegistry}}/contrail-kubernetes-cni-init:{{.Values.global.containerTag}}"
        imagePullPolicy: "Always"
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodes
              key: CONTROLLER_NODES
        volumeMounts:
        - mountPath: /var/lib/contrail
          name: var-lib-contrail
        - mountPath: /host/etc_cni
          name: etc-cni
        - mountPath: /host/opt_cni_bin
          name: opt-cni-bin
        - mountPath: /host/log_cni
          name: var-log-contrail-cni
        - mountPath: /var/log/contrail
          name: agent-logs
      containers:
      - name: contrail-vrouter-agent
        image: "{{.Values.global.containerRegistry}}/contrail-vrouter-agent:{{.Values.global.containerTag}}"
        imagePullPolicy: "Always"
        securityContext:
          privileged: true
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodes
              key: CONTROLLER_NODES
        lifecycle:
          preStop:
            exec:
              command: ["/clean-up.sh"]
        volumeMounts:
        - mountPath: /dev
          name: dev
        - mountPath: /etc/sysconfig/network-scripts
          name: network-scripts
        - mountPath: /host/bin
          name: host-bin
        - mountPath: /var/log/contrail
          name: agent-logs
        - mountPath: /usr/src
          name: usr-src
        - mountPath: /lib/modules
          name: lib-modules
        - mountPath: /var/lib/contrail
          name: var-lib-contrail
        - mountPath: /var/crashes
          name: var-crashes
        - mountPath: /tmp/serviceaccount
          name: pod-secret
      - name: nodemgr
        image: "{{.Values.global.containerRegistry}}/contrail-nodemgr:{{.Values.global.containerTag}}"
        imagePullPolicy: "Always"
        envFrom:
        - configMapRef:
            name: contrail-config-map
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DOCKER_HOST
          value: "unix://mnt/docker.sock"
        - name: CONTROLLER_NODES
          valueFrom:
            configMapKeyRef:
              name: contrailcontrollernodes
              key: CONTROLLER_NODES
        - name: NODE_TYPE
          value: vrouter
        volumeMounts:
        - mountPath: /var/log/contrail
          name: agent-logs
        - mountPath: /mnt
          name: docker-unix-socket
      volumes:
      - name: dev
        hostPath:
          path: /dev
      - name: network-scripts
        hostPath:
          path: /etc/sysconfig/network-scripts
      - name: host-bin
        hostPath:
          path: /bin
      - name: docker-unix-socket
        hostPath:
          path: /var/run
      - name: pod-secret
        secret:
          secretName: contrail-kube-manager-token
      - name: usr-src
        hostPath:
          path: /usr/src
      - name: lib-modules
        hostPath:
          path: /lib/modules
      - name: var-lib-contrail
        hostPath:
          path: /var/lib/contrail
      - name: var-crashes
        hostPath:
          path: /var/contrail/crashes
      - name: etc-cni
        hostPath:
          path: /etc/cni
      - name: opt-cni-bin
        hostPath:
          path: /opt/cni/bin
      - name: var-log-contrail-cni
        hostPath:
          path: /var/log/contrail/cni
      - name: agent-logs
        hostPath:
          path: /var/log/contrail/agent
      - name: host-usr-bin
        hostPath:
          path: /usr/bin
